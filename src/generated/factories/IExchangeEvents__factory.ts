/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IExchangeEvents,
  IExchangeEventsInterface,
} from "../IExchangeEvents";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256",
        name: "assetToMove",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "poolAsset",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "totalAssetLong",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "totalAssetShort",
        type: "int256",
      },
    ],
    name: "DFRCharged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256",
        name: "tradeFeeFraction",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "timeFee",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxLeverage",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minCollateral",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "treasuryFraction",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "removeLiquidityFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "tradeLiquidityReserveFactor",
        type: "int256",
      },
    ],
    name: "ExchangeConfig1Changed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256",
        name: "dfrRate",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "liquidatorFrac",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "maxLiquidatorFee",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "poolLiquidationFrac",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "maxPoolLiquidationFee",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "adlFeePercent",
        type: "int256",
      },
    ],
    name: "ExchangeConfig2Changed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum IExchange.ExchangeState",
        name: "exchangeState",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "pausePrice",
        type: "int256",
      },
    ],
    name: "ExchangeStateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "incentivesTradeSize",
        type: "uint256",
      },
    ],
    name: "IncentivesExchangeCallFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "liquidator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidatorPayout",
        type: "uint256",
      },
    ],
    name: "Liquidate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "assetAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stableAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidityTokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidityTokenSupply",
        type: "uint256",
      },
    ],
    name: "LiquidityAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "assetAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stableAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidityTokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidityTokenSupply",
        type: "uint256",
      },
    ],
    name: "LiquidityRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tradeFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "traderPayout",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "previousAsset",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "previousStable",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "newAsset",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "newStable",
        type: "int256",
      },
    ],
    name: "PositionChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256",
        name: "longAssetCharged",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "shortAssetCharged",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "totalAssetLong",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "totalAssetShort",
        type: "int256",
      },
    ],
    name: "TimeFeeCharged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint8",
        name: "trancheId",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "shareClass",
        type: "uint64",
      },
    ],
    name: "TrancheAutoDeleveraged",
    type: "event",
  },
];

export class IExchangeEvents__factory {
  static readonly abi = _abi;
  static createInterface(): IExchangeEventsInterface {
    return new utils.Interface(_abi) as IExchangeEventsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IExchangeEvents {
    return new Contract(address, _abi, signerOrProvider) as IExchangeEvents;
  }
}
