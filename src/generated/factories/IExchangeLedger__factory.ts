/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IExchangeLedger,
  IExchangeLedgerInterface,
} from "../IExchangeLedger";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAmm",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAmm",
        type: "address",
      },
    ],
    name: "AmmAddressChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256",
        name: "deltaAsset",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "deltaStable",
        type: "int256",
      },
    ],
    name: "AmmAdl",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "tradeFeeFraction",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "timeFee",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "maxLeverage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minCollateral",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "treasuryFraction",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "dfrRate",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "liquidatorFrac",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "maxLiquidatorFee",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "poolLiquidationFrac",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "maxPoolLiquidationFee",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "adlFeePercent",
            type: "int256",
          },
        ],
        indexed: false,
        internalType: "struct IExchangeLedger.ExchangeConfig",
        name: "previousConfig",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int256",
            name: "tradeFeeFraction",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "timeFee",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "maxLeverage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minCollateral",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "treasuryFraction",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "dfrRate",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "liquidatorFrac",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "maxLiquidatorFee",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "poolLiquidationFrac",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "maxPoolLiquidationFee",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "adlFeePercent",
            type: "int256",
          },
        ],
        indexed: false,
        internalType: "struct IExchangeLedger.ExchangeConfig",
        name: "newConfig",
        type: "tuple",
      },
    ],
    name: "ExchangeConfigChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousHook",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newHook",
        type: "address",
      },
    ],
    name: "ExchangeHookAddressChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum IExchangeLedger.ExchangeState",
        name: "previousState",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "previousPausePrice",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "enum IExchangeLedger.ExchangeState",
        name: "newState",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "newPausePrice",
        type: "int256",
      },
    ],
    name: "ExchangeStateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        components: [
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "address",
            name: "liquidator",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isClosing",
            type: "bool",
          },
          {
            internalType: "int256",
            name: "deltaAsset",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "deltaStable",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "stableBound",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "oraclePrice",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "time",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "timeFeeCharged",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "dfrCharged",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "tradeFee",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "startAsset",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "startStable",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "totalAsset",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "totalStable",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "traderPayment",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "liquidatorPayment",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "treasuryPayment",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "executionPrice",
            type: "int256",
          },
        ],
        indexed: false,
        internalType: "struct IExchangeLedger.ChangePositionData",
        name: "cpd",
        type: "tuple",
      },
    ],
    name: "OnChangePositionHookFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "address",
            name: "liquidator",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isClosing",
            type: "bool",
          },
          {
            internalType: "int256",
            name: "deltaAsset",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "deltaStable",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "stableBound",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "oraclePrice",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "time",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "timeFeeCharged",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "dfrCharged",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "tradeFee",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "startAsset",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "startStable",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "totalAsset",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "totalStable",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "traderPayment",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "liquidatorPayment",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "treasuryPayment",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "executionPrice",
            type: "int256",
          },
        ],
        indexed: false,
        internalType: "struct IExchangeLedger.ChangePositionData",
        name: "cpd",
        type: "tuple",
      },
    ],
    name: "PositionChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousTradeRouter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newTradeRouter",
        type: "address",
      },
    ],
    name: "TradeRouterAddressChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "tranche",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "trancheIdx",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "assetADL",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "stableADL",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "totalTrancheShares",
        type: "int256",
      },
    ],
    name: "TrancheAutoDeleveraged",
    type: "event",
  },
  {
    inputs: [],
    name: "amm",
    outputs: [
      {
        internalType: "contract IAmm",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "int256",
        name: "deltaStable",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "deltaAsset",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "stableBound",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "oraclePrice",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "changePosition",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct IExchangeLedger.Payout[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "exchangeState",
    outputs: [
      {
        internalType: "enum IExchangeLedger.ExchangeState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "price",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "getAmmPosition",
    outputs: [
      {
        internalType: "int256",
        name: "stableAmount",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "assetAmount",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "int256",
        name: "price",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "getPosition",
    outputs: [
      {
        internalType: "int256",
        name: "asset",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "stable",
        type: "int256",
      },
      {
        internalType: "uint32",
        name: "trancheIdx",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "address",
        name: "liquidator",
        type: "address",
      },
      {
        internalType: "int256",
        name: "oraclePrice",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "liquidate",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct IExchangeLedger.Payout[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pausePrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_amm",
        type: "address",
      },
    ],
    name: "setAmm",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "tradeFeeFraction",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "timeFee",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "maxLeverage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minCollateral",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "treasuryFraction",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "dfrRate",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "liquidatorFrac",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "maxLiquidatorFee",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "poolLiquidationFrac",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "maxPoolLiquidationFee",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "adlFeePercent",
            type: "int256",
          },
        ],
        internalType: "struct IExchangeLedger.ExchangeConfig",
        name: "_config",
        type: "tuple",
      },
    ],
    name: "setExchangeConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IExchangeLedger.ExchangeState",
        name: "_state",
        type: "uint8",
      },
      {
        internalType: "int256",
        name: "_pausePrice",
        type: "int256",
      },
    ],
    name: "setExchangeState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_hook",
        type: "address",
      },
    ],
    name: "setHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tradeRouter",
        type: "address",
      },
    ],
    name: "setTradeRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IExchangeLedger__factory {
  static readonly abi = _abi;
  static createInterface(): IExchangeLedgerInterface {
    return new utils.Interface(_abi) as IExchangeLedgerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IExchangeLedger {
    return new Contract(address, _abi, signerOrProvider) as IExchangeLedger;
  }
}
