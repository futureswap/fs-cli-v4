/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IExchangeInternal,
  IExchangeInternalInterface,
} from "../IExchangeInternal";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8",
        name: "trancheId",
        type: "uint8",
      },
      {
        internalType: "uint32",
        name: "shareClass",
        type: "uint32",
      },
    ],
    name: "getTranche",
    outputs: [
      {
        internalType: "int256",
        name: "assetShares",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "stable",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "totalTrancheShares",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "trancheId",
        type: "uint8",
      },
    ],
    name: "lastShareClass",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdatedTimestamp",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "longPosition",
    outputs: [
      {
        internalType: "int128",
        name: "asset",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "totalAssetShares",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_trader",
        type: "address",
      },
    ],
    name: "positions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "shortPosition",
    outputs: [
      {
        internalType: "int128",
        name: "asset",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "totalAssetShares",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_trader",
        type: "address",
      },
    ],
    name: "updateIncentives",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IExchangeInternal__factory {
  static readonly abi = _abi;
  static createInterface(): IExchangeInternalInterface {
    return new utils.Interface(_abi) as IExchangeInternalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IExchangeInternal {
    return new Contract(address, _abi, signerOrProvider) as IExchangeInternal;
  }
}
